version: "3.8"

services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_DB=restaurant_payment
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    restart: always
    networks:
      - mcs-network
    volumes:
      - postgres_data:/val/lib/postgresl
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  broker:
    image: confluentinc/cp-kafka:7.5.0
    hostname: broker
    container_name: broker
    user: root
    networks: 
      - mcs-network
    ports:
      - "9092:9092"
    restart: always
    environment:
      # KRaft settings
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=controller,broker
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@broker:29093
      # Listeners
      - KAFKA_LISTENERS=PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      # Cluster
      - CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
    healthcheck:
      test: kafka-topics --bootstrap-server broker:9092 --list
      interval: 30s
      timeout: 10s
      retries: 5
  restaurant-payment-migration:
    image: migrate/migrate
    container_name: restaurant-payment-migration
    restart: "no"
    networks:
      - mcs-network
    volumes:
      - ../src/infrastructure/migrations:/migrations
    command:
      [
        "-path=/migrations/",
        "-database",
        "postgres://postgres:postgres@postgres:5432/restaurant_payment?sslmode=disable",
        "up",
      ]
    depends_on:
      postgres:
        condition: service_healthy
  restaurant-payment-svc:
    image: restaurant-payment-svc
    container_name: restaurant-payment-svc
    environment:
      - LOG_LEVEL=debug
      - HTTP_PORT=:3301
      - GRPC_PORT=:3300
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_DATABASE=restaurant_payment
      - KAFKA_ADDRESS=broker:9092
    depends_on:
      restaurant-payment-migration:
        condition: service_completed_successfully
      broker:
        condition: service_healthy
    ports:
      - "3301:3301"
      - "3300:3300"
    restart: always
    networks:
      - mcs-network
    volumes:
      - ${PWD}/data:/data
networks:
  mcs-network:
    external: true
volumes:
  postgres_data:
    driver: local
